{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { TabsPage } from './tabs.page';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'tabs',\n  component: TabsPage,\n  children: [{\n    path: 'home',\n    children: [{\n      path: '',\n      loadChildren: () => import('../pages/home/home.module').then(m => m.HomePageModule)\n    }, {\n      path: 'forum',\n      loadChildren: () => import('../pages/forum/forum.module').then(m => m.ForumPageModule)\n    }, {\n      // If user types localhost:8100/tabs/habits/viewChallenge/challenge_id then ViewChallengePageModule component and view is shown.\n      path: 'viewChallenge/:id',\n      loadChildren: () => import('../pages/challenges/view/viewChallenge.module').then(m => m.ViewChallengePageModule)\n    }, {\n      path: 'available',\n      children: [{\n        path: '',\n        children: [{\n          path: '',\n          loadChildren: () => import('../pages/available/available.module').then(m => m.AvailablePageModule)\n        }, {\n          path: 'answer/:id',\n          loadChildren: () => import('../pages/answer/answer.module').then(m => m.AnswerPageModule)\n        }]\n      }]\n    }, {\n      path: 'available/:id',\n      loadChildren: () => import('../pages/available/available.module').then(m => m.AvailablePageModule)\n    }, {\n      path: 'available/:id',\n      loadChildren: () => import('../pages/available/available.module').then(m => m.AvailablePageModule)\n    }]\n  }, {\n    path: 'chat',\n    children: [{\n      path: '',\n      loadChildren: () => import('../pages/chat/chat.module').then(m => m.ChatPageModule)\n    }]\n  }, {\n    path: 'habits',\n    children: [{\n      // If user types localhost:8100/tabs/habits/ then ChallengePageModule component and view is shown.\n      path: '',\n      loadChildren: () => import('../pages/challenges/challenge.module').then(m => m.ChallengePageModule)\n    }, {\n      // If user types localhost:8100/tabs/habits/ then ChallengePageModule component and view is shown.\n      path: 'completed_challenge/:id',\n      loadChildren: () => import('../pages/challenges/challenge.module').then(m => m.ChallengePageModule)\n    }, {\n      // If user types localhost:8100/tabs/habits/ then ChallengePageModule component and view is shown.\n      path: 'show_all_challenges/:default-challenge-page',\n      loadChildren: () => import('../pages/challenges/challenge.module').then(m => m.ChallengePageModule)\n    }, {\n      // If user types localhost:8100/tabs/habits/viewChallenge/challenge_id then ViewChallengePageModule component and view is shown.\n      path: 'viewChallenge/:id',\n      loadChildren: () => import('../pages/challenges/view/viewChallenge.module').then(m => m.ViewChallengePageModule)\n    }]\n  }, {\n    path: 'more',\n    children: [{\n      path: 'learning-center',\n      children: [{\n        path: '',\n        children: [{\n          path: '',\n          loadChildren: () => import('../pages/learning-center/learning-center.module').then(m => m.LearningCenterPageModule)\n        }, {\n          path: 'learning-module-content/:id',\n          loadChildren: () => import('../pages/learning-center/learning-module-content/learning-module-content.module').then(m => m.LearningModuleContentPageModule)\n        }]\n      }]\n    }, {\n      path: 'learning-center/:id',\n      loadChildren: () => import('../pages/learning-center/learning-center.module').then(m => m.LearningCenterPageModule)\n    }, {\n      //This module loaded when /more is visited. Routes of the pattern /more/index will be matched by the more-routing.module.ts\n      path: '',\n      loadChildren: () => import('../pages/more/more.module').then(m => m.MorePageModule)\n    }, {\n      path: 'calender',\n      loadChildren: () => import('../pages/calendar/calendar.module').then(m => m.CalendarPageModule)\n    }]\n  }, {\n    path: '',\n    redirectTo: '/tabs/home',\n    pathMatch: 'full'\n  }]\n}, {\n  path: '',\n  redirectTo: '/tabs/home',\n  pathMatch: 'full'\n}];\nexport let TabsPageRoutingModule = /*#__PURE__*/(() => {\n  class TabsPageRoutingModule {}\n\n  TabsPageRoutingModule.ɵfac = function TabsPageRoutingModule_Factory(t) {\n    return new (t || TabsPageRoutingModule)();\n  };\n\n  TabsPageRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: TabsPageRoutingModule\n  });\n  TabsPageRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forChild(routes), RouterModule]\n  });\n  return TabsPageRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}