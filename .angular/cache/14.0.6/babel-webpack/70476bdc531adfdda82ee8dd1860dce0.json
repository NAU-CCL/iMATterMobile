{"ast":null,"code":"var _a;\n\nimport { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ChallengeService } from '../../services/challenges/challenge-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Storage } from '@ionic/storage';\nimport { AnalyticsService } from 'src/app/services/analyticsService.service';\nimport { DatePipe } from '@angular/common';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AlertController } from '@ionic/angular';\nlet ChallengePage = class ChallengePage {\n  constructor(challengeService, storage, router, activeRoute, afs, analyticsService, alertController, datePipe, analyticService) {\n    this.challengeService = challengeService;\n    this.storage = storage;\n    this.router = router;\n    this.activeRoute = activeRoute;\n    this.afs = afs;\n    this.analyticsService = analyticsService;\n    this.alertController = alertController;\n    this.datePipe = datePipe;\n    this.analyticService = analyticService;\n    this.analytic = {\n      page: '',\n      userID: '',\n      timestamp: '',\n      sessionID: ''\n    };\n    this.showChallengeDetails = false;\n    this.joinedChallenges = [];\n    this.completedChallenges = [];\n    this.challengeView = 'all';\n    this.itemsInChallengeRow = 2;\n    this.justCompletedChallenge = false;\n  } // Is not guranteed to be called everytime the page is visited.\n\n\n  ngOnInit() {\n    console.log('In ngoninit');\n    this.storage.get('authenticated').then(val => {\n      if (val === 'false') {\n        this.router.navigate(['/login/']);\n      }\n    });\n    this.challenges = this.challengeService.getAllChallenges();\n    this.types = this.challengeService.getChallengeTypes();\n  }\n\n  ionViewWillEnter() {\n    this.processRouteParams();\n    console.log('In ion will enter');\n    this.storage.get('userCode').then(val => {\n      if (val) {\n        const ref = this.afs.firestore.collection('users').where('code', '==', val);\n        ref.get().then(result => {\n          result.forEach(doc => {\n            this.userID = val;\n            this.challengeService.getJoinedChallenges(this.userID).then(resp => {\n              this.joinedChallenges = resp;\n              console.log(this.joinedChallenges);\n            });\n            this.challengeService.getCompletedChallenges(this.userID).then(resp => {\n              this.completedChallenges = resp;\n              this.completedChallenges.forEach(challenge => {\n                console.log(new Date(challenge.dateFinished.seconds * 1000).toLocaleDateString('en-US'));\n                console.log(challenge.dateFinished);\n                challenge.dateFinished = new Date(challenge.dateFinished.seconds * 1000).toLocaleDateString('en-US');\n                challenge.dateFinished = this.datePipe.transform(challenge.dateFinished, 'MMMM d, yyyy');\n              });\n              console.log(this.completedChallenges);\n            });\n          });\n        });\n      }\n    });\n  }\n\n  ionViewDidEnter() {\n    console.log(\"In ion did enter\");\n  }\n\n  ionViewWillLeave() {\n    console.log(\"In ion will leave\");\n  }\n\n  ngOnDestroy() {} // Sometimes we redirect users to the challenge page but need to show \n  // specific data, process the params and change member variables to their proper values.\n\n\n  processRouteParams() {\n    // Did user just finish a challenge and get redirected here?\n    this.activeRoute.params.subscribe(params => {\n      // Params always returned as strings\n      console.log(`Params are ${JSON.stringify(params)}`);\n\n      if (params['id'] === \"1\") {\n        // Boolean. Did the user just complete a challenge?\n        this.justCompletedChallenge = true; // hacky way to clear params so when user leaves challenge page and comes \n        // back they see the page they were on last and are not force shown the my challenges page.\n\n        this.router.navigate(['tabs/habits/']); // Change this variabled to joined to show the my challenges tab.\n\n        this.challengeView = 'joined';\n      }\n\n      console.log(`DEFAULT CHALLEN VALUE ${params['default-challenge-page']}`);\n\n      if (params['default-challenge-page']) {\n        this.router.navigate(['tabs/habits/']);\n        this.challengeView = 'all';\n        console.log(`Show default chall page true`);\n      }\n    });\n  }\n\n  joinChallenge(id) {\n    const join = {\n      challenge: id,\n      day: 1\n    };\n\n    if (this.joinedChallenges.includes(id)) {\n      this.presentAlert('You are already a part of this challenge.', '');\n    } else {\n      this.joinedChallenges.push(join);\n      this.challengeService.updateJoinedChallenges(this.userID, this.joinedChallenges).then(() => {\n        this.presentAlert('Congratulations!', 'You\\'ve joined this challenge');\n      });\n    }\n  }\n\n  challengeJoined(id) {\n    const joined = [];\n    this.joinedChallenges.forEach(item => {\n      joined.push(item.challenge.id);\n    });\n    return joined.includes(id);\n  }\n\n  challengeFinished(id) {\n    const finished = [];\n    this.completedChallenges.forEach(item => {\n      finished.push(item.challenge);\n    });\n    return finished.includes(id);\n  } // present a basic alert -- used for displaying gc info\n\n\n  presentAlert(header, message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const alert = yield this.alertController.create({\n        header,\n        message,\n        buttons: ['OK']\n      });\n      yield alert.present();\n    });\n  }\n\n  expandCard(id) {\n    const card = document.getElementsByClassName(id)[0].children;\n    Array.from(card).forEach(item => {\n      if (item.tagName !== 'ION-CARD-TITLE') {\n        if (item.classList.contains('ion-hide')) {\n          item.classList.remove('ion-hide');\n        } else {\n          item.classList.add('ion-hide');\n        }\n      }\n    });\n  }\n\n  updateIndividualChallengeClicks() {\n    this.analyticService.updateClicks('individualChallengeClicks');\n  }\n\n};\nChallengePage = __decorate([Component({\n  selector: 'app-forum',\n  templateUrl: './challenge.page.html',\n  styleUrls: ['./challenge.page.scss']\n}), __metadata(\"design:paramtypes\", [ChallengeService, Storage, Router, ActivatedRoute, typeof (_a = typeof AngularFirestore !== \"undefined\" && AngularFirestore) === \"function\" ? _a : Object, AnalyticsService, AlertController, DatePipe, AnalyticsService])], ChallengePage);\nexport { ChallengePage };","map":null,"metadata":{},"sourceType":"module"}