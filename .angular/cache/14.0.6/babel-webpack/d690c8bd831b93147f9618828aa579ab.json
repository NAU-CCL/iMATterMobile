{"ast":null,"code":"var _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { map, take } from 'rxjs/operators';\nlet ChallengeService = class ChallengeService {\n  constructor(afs) {\n    this.afs = afs; //this.addDateOfLastCompletionToChallengArray();\n  }\n\n  getChallengeCollection() {\n    this.challengeCollection = this.afs.collection('challenges');\n    this.challenges = this.challengeCollection.snapshotChanges().pipe(map(actions => {\n      return actions.map(a => {\n        const data = a.payload.doc.data();\n        const id = a.payload.doc.id;\n        return Object.assign({\n          id\n        }, data);\n      });\n    }));\n    this.typesCollection = this.afs.collection('challengeTypes');\n    this.types = this.typesCollection.snapshotChanges().pipe(map(actions => {\n      return actions.map(a => {\n        const data = a.payload.doc.data();\n        const id = a.payload.doc.id;\n        return Object.assign({\n          id\n        }, data);\n      });\n    }));\n  }\n\n  getAllChallenges() {\n    this.getChallengeCollection();\n    return this.challenges;\n  }\n\n  getChallengeTypes() {\n    return this.types;\n  }\n\n  getJoinedChallenges(userID) {\n    return this.afs.firestore.collection('users').doc(userID).get().then(doc => {\n      return doc.data().joinedChallenges;\n    });\n  }\n\n  getCompletedChallenges(userID) {\n    return this.afs.firestore.collection('users').doc(userID).get().then(doc => {\n      return doc.data().completedChallenges;\n    });\n  }\n\n  getChallenge(id) {\n    return this.afs.collection('challenges').doc(id).valueChanges().pipe(take(1), map(challenge => {\n      challenge.id = id;\n      return challenge;\n    }));\n  }\n\n  updateJoinedChallenges(userID, joined) {\n    //console.log(`Updated joined challenge ${JSON.stringify(joined)} \\n\\n\\n for user id ${userID}`);\n    return this.afs.firestore.collection('users').doc(userID).update({\n      joinedChallenges: joined\n    });\n  }\n\n  updateCompletedChallenges(userID, completed) {\n    return this.afs.firestore.collection('users').doc(userID).update({\n      completedChallenges: completed\n    });\n  }\n\n  addDateOfLastCompletionToChallengArray() {\n    this.afs.firestore.collection('users').doc('NTw38h').get().then(user => {\n      let userDataObj = user.data();\n      let userChallengeArray = userDataObj.joinedChallenges;\n      userChallengeArray.map(challengePropObj => {\n        // Get yesterdays date in the most convoluted way possible.\n        challengePropObj.dateOfLastCompletion = new Date(new Date(new Date().setDate(new Date().getDate() - 5)).setHours(0, 0, 0, 0));\n        challengePropObj.currentDay++;\n        return challengePropObj;\n      });\n      console.log(`New User challenge array is ${JSON.stringify(userChallengeArray)}`);\n      user.ref.update({\n        joinedChallenges: userChallengeArray\n      });\n    });\n  }\n\n};\nChallengeService = __decorate([Injectable({\n  providedIn: 'root'\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof AngularFirestore !== \"undefined\" && AngularFirestore) === \"function\" ? _a : Object])], ChallengeService);\nexport { ChallengeService };","map":null,"metadata":{},"sourceType":"module"}