{"ast":null,"code":"var _a;\n\nimport { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { FirebaseX } from '@ionic-native/firebase-x/ngx';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Platform } from '@ionic/angular';\nlet FcmService = class FcmService {\n  constructor(firebase, afs, platform) {\n    this.firebase = firebase;\n    this.afs = afs;\n    this.platform = platform;\n  }\n\n  getToken(userID) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let token;\n\n      if (this.platform.is('android')) {\n        console.log('android in got token');\n        token = yield this.firebase.getToken();\n      } else if (this.platform.is('ios')) {\n        token = yield this.firebase.getToken();\n        this.firebase.grantPermission();\n      }\n\n      this.saveToken(token, userID);\n    });\n  }\n\n  saveToken(token, userID) {\n    if (!token) return;\n    const devicesDatabaseReference = this.afs.collection('users').doc(userID);\n    const data = {\n      token,\n      userId: userID\n    };\n    return devicesDatabaseReference.set({\n      token: token\n    }, {\n      merge: true\n    }).then(res => {\n      console.log('after save');\n    });\n  }\n\n};\nFcmService = __decorate([Injectable({\n  providedIn: 'root'\n}), __metadata(\"design:paramtypes\", [FirebaseX, typeof (_a = typeof AngularFirestore !== \"undefined\" && AngularFirestore) === \"function\" ? _a : Object, Platform])], FcmService);\nexport { FcmService };","map":null,"metadata":{},"sourceType":"module"}