{"ast":null,"code":"import { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { AnalyticsService, Sessions } from 'src/app/services/analyticsService.service';\nimport { Storage } from '@ionic/storage';\nimport { BnNgIdleService } from 'bn-ng-idle';\nimport { Router } from '@angular/router';\nimport { ProfileService } from './services/user/profile.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@ionic-native/splash-screen/ngx\";\nimport * as i3 from \"@ionic-native/status-bar/ngx\";\nimport * as i4 from \"@ionic/storage\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"bn-ng-idle\";\nimport * as i7 from \"src/app/services/analyticsService.service\";\nimport * as i8 from \"./services/user/profile.service\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(platform, splashScreen, statusBar, storage, router, bnIdle, analyticsService, profileService) {\n      this.platform = platform;\n      this.splashScreen = splashScreen;\n      this.statusBar = statusBar;\n      this.storage = storage;\n      this.router = router;\n      this.bnIdle = bnIdle;\n      this.analyticsService = analyticsService;\n      this.profileService = profileService;\n      this.session = {\n        userID: '',\n        LogOutTime: '',\n        LoginTime: '',\n        numOfClickChat: 0,\n        numOfClickCalendar: 0,\n        numOfClickLModule: 0,\n        numOfClickInfo: 0,\n        numOfClickSurvey: 0,\n        numOfClickProfile: 0,\n        numOfClickMore: 0,\n        numOfClickHome: 0\n      };\n      this.initializeApp(); // Event that is suppose to fire when the user leaves to their homescreen.\n\n      document.addEventListener('pause', () => {\n        analyticsService.endSessionOnAppExit();\n      }, false); // Event that fires when user opens app after leaving app previously.\n\n      document.addEventListener('resume', () => {\n        analyticsService.addSessionOnAppEnter();\n      }, false);\n    }\n\n    logOut() {\n      this.storage.set('authenticated', 'false'); // this.storage.remove('userEmail');\n\n      this.storage.remove('userCode');\n      this.storage.remove('email');\n      this.storage.remove('totalDaysPregnant');\n      this.storage.remove('weeksPregnant');\n      this.storage.remove('daysPregnant');\n      this.router.navigateByUrl('login');\n    }\n\n    initializeApp() {\n      this.platform.ready().then(() => {\n        this.statusBar.styleDefault();\n        this.splashScreen.hide();\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i2.SplashScreen), i0.ɵɵdirectiveInject(i3.StatusBar), i0.ɵɵdirectiveInject(i4.Storage), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.BnNgIdleService), i0.ɵɵdirectiveInject(i7.AnalyticsService), i0.ɵɵdirectiveInject(i8.ProfileService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 1,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"ion-router-outlet\");\n      }\n    }\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}