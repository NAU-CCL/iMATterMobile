{"ast":null,"code":"var _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { AuthServiceProvider } from '../../../services/user/auth.service';\nimport { recovery_emailService } from '../../../services/recovery.service';\nimport { AlertController } from '@ionic/angular';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { ToastController } from '@ionic/angular';\nlet ResetPasswordPage = class ResetPasswordPage {\n  constructor(authService, alertCtrl, formBuilder, router, recoveryEmailService, afs, toastCtrl) {\n    this.authService = authService;\n    this.alertCtrl = alertCtrl;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.recoveryEmailService = recoveryEmailService;\n    this.afs = afs;\n    this.toastCtrl = toastCtrl;\n    this.recoveryEmail = {\n      id: '',\n      code: '',\n      email: ''\n    };\n    this.resetPasswordForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])]\n    });\n  }\n\n  ngOnInit() {}\n\n  showToast(msg) {\n    this.toastCtrl.create({\n      message: msg,\n      duration: 2000\n    }).then(toast => toast.present());\n  }\n\n  addRecovery() {\n    this.recoveryEmail.email = this.resetPasswordForm.value.email;\n    let ref = this.afs.firestore.collection('users');\n    ref.where('email', '==', this.recoveryEmail.email).get().then(snapshot => {\n      if (snapshot.docs.length > 0) {\n        this.userEmail = true;\n        const userRef = ref.where('email', '==', this.recoveryEmail.email);\n        userRef.get().then(result => {\n          result.forEach(doc => {\n            this.index = 0;\n            this.isAvailable = false;\n            this.code = Math.floor(Math.random() * 1000000000);\n            this.recoveryEmail.code = this.code.toString();\n            console.log(this.code);\n            this.recoveryEmail.email = this.resetPasswordForm.value.email;\n            console.log(this.recoveryEmail.email);\n            this.recoveryEmailService.addRecovery(this.recoveryEmail);\n            this.router.navigateByUrl('recovery-code');\n          });\n        });\n      } else {\n        this.userEmail = false;\n        this.showToast('Email  is not valid');\n      }\n    });\n  }\n\n};\nResetPasswordPage = __decorate([Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.page.html',\n  styleUrls: ['./reset-password.page.scss']\n}), __metadata(\"design:paramtypes\", [AuthServiceProvider, AlertController, FormBuilder, Router, recovery_emailService, typeof (_a = typeof AngularFirestore !== \"undefined\" && AngularFirestore) === \"function\" ? _a : Object, ToastController])], ResetPasswordPage);\nexport { ResetPasswordPage };","map":null,"metadata":{},"sourceType":"module"}